<!doctype html>
<html>
<head>
	<script src="scripts/jquery.js"></script>
	<script src="scripts/json2.js"></script>
	
	<link href='style/main.css' type='text/css' rel='stylesheet'>
	
	<script>
	
	var state = "";
	
	var userManager = {
		users: {}
	};
	
	User = function(userId){
		this.isReady = false;
		
		this.$el = userManager.$userTemplate.clone();
		this.$el.attr('id','user_'+ userId);
		this.$el.find('.name').text(userId);
		this.$el.appendTo($('#users'));
		
	};
	
	User.prototype.ready = function(isReady){
	
		if (isReady == null)
			return this.isReady;
			
		this.isReady = isReady;
		
		this.$el.find('.ready').toggle(this.isReady);
		this.$el.find('.notReady').toggle(this.isReady == false);
	
	}
	
	userManager.addUser = function(userId){
	
		log("Adding user: " + userId);
		
		this.users[userId] = new User(userId);
	};
	
	userManager.removeUser = function(userId){
	
		log("Removing user: " + userId);
		
		$('#user_'+ userId).fadeOut();
		
		delete this.users[userId];
	};
	
	userManager.get = function(userId){
		return this.users[userId];
	};
	
	actions = {
		"initRoom" : function(message){
			log("initialising room...");
			if(message.room.state == "lobby"){
				var users = message.room.users;
				for (userId in users)
					userManager.addUser(userId);
			}
		},
		"joinRoom" : function(message){
			log("User joined room");
			userManager.addUser(message.userId);
		},
		"closed" : function(message){
			log("User left room");
			userManager.removeUser(message.userId);
		},
		"userReady" : function(message){
			log("User ready");
			userManager.get(message.userId).ready(message.isReady);
		},
		"yourId" : function(message){
			log("Got Id");
			selfId = message.userId;
		}
	}
		
	incrementClock = function(){
			$('#clock').text(parseInt($('#clock').text()) -1); 
			if ($('#clock').text() == "0"){
				clearInterval(clockInterval);
			}
		}
		
		function log(data){
		  console.log(data);
		}

		var conn, recvd, connections = 0;
		
		if (window["WebSocket"]) {
			recvd = 0;

			conn = new WebSocket("ws://localhost:8000/");

			conn.onmessage = function(evt) {
				log("Received: " +evt.data);
				try{
					var message = JSON.parse(evt.data);
					actions[message.action](message);
				}catch(err){
					// not valid json
				}
			};

			conn.onerror = function() {
			  log("error", arguments);
			};

			conn.onclose = function() {
			  log("closed");
			};
		
	  	}
	  
		$(document).ready(function(){
				
			userManager.$userTemplate = $('#userTemplate').clone().removeAttr('id').removeClass('template').show();
		
			$('#actions a').click(function(e){
				e.preventDefault();
				
			  	var isReady = !userManager.get(selfId).ready();
			  	
			  	userManager.get(selfId).ready(isReady);
			  	
			  	conn.send(JSON.stringify({'action':'userReady', 'isReady': isReady}));
			  	$('#actions a').toggle();
			});
		
			$('.tiles a').click(function(e){
				e.preventDefault();
				var destination = ($(this).closest('#input').length) ? '#output' : '#input';
				$(this).closest('li').appendTo(destination + ' .tiles');
			});
			
			$('#submit').click(function(e){
			  
			  	e.preventDefault();
			  	
			  	var word = $.trim($('#output').text());
			  	
			  	conn.send(JSON.stringify({'action':'submit','word': word}));
			  	
			  });
			
			clockInterval = setInterval("incrementClock()",1000);
			
			
			var hash = window.location.hash;

			if (hash.search(/^#/) != -1)
				hash = hash.substring(1);

			var hashArray = hash.split('&');

			var hashOptions = {};

			for (var i = 0; i < hashArray.length; i++) {
				var nameValue = hashArray[i].split('=');
				hashOptions[nameValue[0]] = nameValue[1];
			}

			conn.onopen = function() {
				log("opened");
				conn.send(JSON.stringify({"action":"joinRoom", "roomId" : hashOptions.room}));
			};
		
		});
	
		
	  
	  

	</script>
</head>
<body>

	<div id="lobby">
	
		<h2>Players:</h2>
	
		<ul id="users">
			<li id="userTemplate" class="template">
				<span class="name"></span>
				<span class="readyState">
					<span class="ready">
						Ready!
					</span>
					<span class="notReady">
						Not Ready!
					</span>
				</span>
			</li>
		</ul>
		
		<div id="actions">
			<a class="ready" href="#">Play game!</a>
			<a class="notReady" href="#">Hang on - I'm not ready!</a>
		</div>
	
	</div>

	<div id="game">

		<div id="clock">30</div>
		<div id="input">
			<ul class="tiles">
				<li><a href="#">A</a></li>
				<li><a href="#">G</a></li>
				<li><a href="#">T</a></li>
				<li><a href="#">U</a></li>
				<li><a href="#">E</a></li>
				<li><a href="#">V</a></li>
				<li><a href="#">R</a></li>
				<li><a href="#">C</a></li>
			</ul>
		</div>
		<div id="output">
			<ul class="tiles"></ul>
		</div>
		<div id="controls">
			<a id="submit" href="#">That's my word!</a>
		</div>
	</div>
</body>
</html>
